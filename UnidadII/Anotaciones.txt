Pilares de la Programacion Orientada a Objetos
Abstracción.
Encapsulacion.
Herencia: 
    Funcionalidad de la POO que pemite reutilizar codigo. Tecnicamente se aplica herencia identificando atributos en comun de un grupo de clases bajo un mismo contexto. Se define una nueva clase que encapsule los atributos en comun y se le asigna un nombre descriptivo para el grupo de clases. A esta nueva clase se le conoce como clase padre, super clase o clase base, y las clases que HEREDAN de esta nueva clase se les conoce como clases hijas, sub clases o clases derivadas

    Para aplicar herencia se utiliza la palabra reservada extends:
        ClaseHija extends ClasePadre
    
    No se puede tener multiples clases padre. Se puede simular utilizando interfaces.

    Sobreescritura: Escribir nuevamente en una clase hija un metodo que estaba definido previamente en una clase padre. La funcionalidad de este metodo sobreescrito puede ser completamente diferente.
    Se suele agregar la anotación @Override para indicar que un metodo esta sobreescrito.


    Clases abstractas:
    Son clases genericas, usualmente son clases padre, suelen generalizar un grupo de clases.
    Tienen las siguientes caracteristicas:
    1. Se agrega el modificador abstract antes de la palabra class para indicar de que es una clase abstracta.
    2. Una clase abstracta no se puede instanciar.
    3. A pesar de que no se puede instanciar, si puede tener constructores.
    4. Es posible agregar el modificador abstract a los metodos.
    5. Si existe un metodo abstracto, la clase debe ser abstracta.
    6. Una clase puede ser abstracta sin tener metodos abstractos.
    7. Un metodo abstracto no tiene cuerpo, solo se define.
    8. Un metodo abstracto debe sobreescribirse obligatoriamente en clases hijas.
    


Polimorfismo.




Interfaces Gráficas de Usuario (GUI)
Paquetes disponibles en Java:
    AWT
    Swing (javax.swing)
    JavaFX (javafx)
            Java > 7 
                En java 7 las librerias estaban por aparte.
                En java 8 Las incluyeron en el JDK
                En java 11, JavaFX se hizo open source, nuevamente no viene en el JDK


Pasos para trabajar con JavaFX y eclipse

*Instalar el JDK
*Instalar eclipse
*Descargar librerias de JavaFX
*Descomprimir el archivo en alguna carpeta fija
*Crear un nuevo proyecto en eclipse
*Seleccionar el proyecto, luego en *Project->Properties->JavaBuildPath->Libraries->ModulePath->Add External Jars
*Buscar la carpeta de las librerias de JavaFX y *seleccionar todos los archivos .jar
*Aplicar y Cerrar
*Seleccionar el proyecto
*Menu Run->Run Configurations->Arguments
*Agregar lo siguiente en la casilla de VM  Arguments:
    --module-path "RUTA" --add-modules=javafx.controls
    --module-path "/Users/erick.marin/Others/javafx-sdk-11.0.2/lib" --add-modules=javafx.controls
*Apply


